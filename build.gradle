buildscript {
    repositories {
        maven {
            allowInsecureProtocol true
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
    }
}
plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id "com.github.shalousun.smart-doc" version "2.2.9"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version "$springboot"
}

group = "${projectGroup}"
version = "${projectVersion}"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/spring/' }
    maven {
        allowInsecureProtocol true
        url 'http://8.142.78.63:8081/repository/maven-snapshots/'
    }
}

dependencies {
    implementation "com.xia:yu-api:$yuApi"

    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:$springboot"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:$springboot"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatis"
    implementation "com.github.pagehelper:pagehelper:$mybatisHelper"
    implementation "org.springframework.boot:spring-boot-starter-quartz:$springboot"
    implementation "org.springframework.boot:spring-boot-starter-web:$springboot"
    implementation "org.springframework.boot:spring-boot-starter-websocket:$springboot"
    implementation "org.springframework.boot:spring-boot-starter-mail:$springboot"
    implementation "org.springframework.boot:spring-boot-devtools:$springboot"
    implementation "org.apache.shiro:shiro-spring:$shiro"
    implementation "org.apache.dubbo:dubbo-spring-boot-starter:$dubbo"
    implementation "com.auth0:java-jwt:$auth0"
    implementation "io.jsonwebtoken:jjwt:$jjwt"
    implementation "cn.hutool:hutool-all:$hutoolAll"
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'commons-logging:commons-logging:1.2'
    implementation "org.apache.commons:commons-lang3:${commonsLang}"

    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"

    implementation "redis.clients:jedis:$jedis"


    implementation(group: 'org.apache.dubbo', name: 'dubbo-dependencies-zookeeper', version: "$dubbo") {
        exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
    }
    implementation 'junit:junit:4.13.1'

    runtimeOnly "mysql:mysql-connector-java:$mysql"
    testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:$mybatis"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springboot"
}

java {
    withSourcesJar()
    withJavadocJar()
}

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "https://docs.oracle.com/javase/8/docs/api/"
        title "夏禹-权限系统"
    }
}
publishing {
    publications {
        // 推送
        mavenJava(MavenPublication) {
            from components.java
        }
    }


    // 到 http://8.142.78.63:8081/repository/; 搜索是否上传成功
    repositories {
        // 发布Release版本可在版本号后面带上'-RELEASE'，也可不带
        maven {
            def releasesUrl = 'http://8.142.78.63:8081/repository/maven-releases/'
            def snapshotsUrl = 'http://8.142.78.63:8081/repository/maven-snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsUrl : releasesUrl
            allowInsecureProtocol true
            credentials {
                username = "${nexus_username}"
                password = "${nexus_password}"
            }
        }
    }
}

test {
    useJUnitPlatform()
}